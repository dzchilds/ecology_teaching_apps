[{"name":"app.R","content":"library(shiny)\nlibrary(popbio)\nlibrary(plotly)\n\n# Define UI for the app\n# Define UI for the app\nui <- fluidPage(\n  titlePanel(\"Population Projection\"),\n  sidebarLayout(\n    sidebarPanel(\n      width = 4,\n      sliderInput(\"s1\", \"Survival Probability (Juveniles):\", value = 0.2, min = 0, max = 1, step = 0.05),\n      sliderInput(\"s2\", \"Survival Probability (Adults):\", value = 0.8, min = 0, max = 1, step = 0.05),\n      sliderInput(\"f2\", \"Fecundity Rate (Adults):\", value = 1.5, min = 0, max = 5, step = 0.1),\n      sliderInput(\"years\", \"Projection Length:\", value = 12, min = 1, max = 50),\n      sliderInput(\"prop_j\", \"Initial Proportion of Juveniles\", value = 0.9, min = 0, max = 1, step = 0.05),\n      actionButton(\"reset\", \"Reset to Defaults\"),\n      br(), br(), hr(), br(),\n      strong(\"Population Growth Rate (λ):\"),\n      textOutput(\"lambdaSummary\")\n    ),\n    mainPanel(\n      fluidRow(\n        column(6, plotlyOutput(\"totalPopPlot\")),\n        column(6, plotlyOutput(\"logTotalPopPlot\"))\n      ),\n      fluidRow(\n        column(6, plotlyOutput(\"popPlot\")),\n        column(6, plotlyOutput(\"stageStructurePlot\"))\n      )\n    )\n  )\n)\n\n# Define server logic\nserver <- function(input, output, session) {  \n  \n  observeEvent(input$reset, {\n    updateNumericInput(session, \"s1\", value = 0.2)\n    updateNumericInput(session, \"s2\", value = 0.8)\n    updateNumericInput(session, \"f2\", value = 1.5)\n    updateNumericInput(session, \"prop_j\", value = 0.9)\n    updateNumericInput(session, \"years\", value = 12)\n  })\n  \n  population_projection <- reactive({\n    A <- matrix(c(0, input$f2, input$s1, input$s2), nrow = 2, byrow = TRUE)\n    total_pop <- 100  \n    initial_pop <- c(input$prop_j * total_pop, (1 - input$prop_j) * total_pop)\n    projection <- pop.projection(A, initial_pop, iterations = input$years)\n    data.frame(Year = seq.int(0, input$years - 1),  \n               Juveniles = projection$stage.vectors[1, 1:input$years],\n               Adults = projection$stage.vectors[2, 1:input$years],\n               Total = projection$pop.sizes[1:input$years])\n  })\n  \n  output$lambdaSummary <- renderText({\n    m <- matrix(c(0, input$f2, input$s1, input$s2), nrow = 2, byrow = TRUE)\n    lambda <- round(popbio::lambda(m), 2)\n    status <- if (lambda < 1) {\n      \"The population is declining 📉\"\n    } else if (lambda == 1) {\n      \"The population is stable ⚖️\"\n    } else {\n      \"The population is growing 🚀\"\n    }\n    paste(\"λ =\", lambda, \":::\", status)\n  })\n  \n  output$totalPopPlot <- renderPlotly({\n    data <- population_projection()\n    plot_ly(data, x = ~Year, y = ~Total, type = \"scatter\", mode = \"lines+markers\",\n            marker = list(size = 8), name = \"Total Population\") %>%\n      layout(xaxis = list(title = \"Year\"),\n             yaxis = list(title = \"Total Population Size\")) %>%\n      config(displayModeBar = FALSE)\n  })\n  \n  output$logTotalPopPlot <- renderPlotly({\n    data <- population_projection()\n    plot_ly(data, x = ~Year, y = ~Total, type = \"scatter\", mode = \"lines+markers\",\n            marker = list(size = 8), name = \"Total Population\") %>%\n      layout(xaxis = list(title = \"Year\"),\n             yaxis = list(type = \"log\", title = \"Total Population Size (Log Scale)\")) %>%\n      config(displayModeBar = FALSE)\n  })\n  \n  output$stageStructurePlot <- renderPlotly({\n    data <- population_projection()\n    plot_ly(data, x = ~Year) %>%\n      add_trace(y = ~ (data$Juveniles / data$Total) * 100, type = \"scatter\", mode = \"lines+markers\",\n                name = \"Juveniles\", line = list(color = \"blue\")) %>%\n      add_trace(y = ~ (data$Adults / data$Total) * 100, type = \"scatter\", mode = \"lines+markers\",\n                name = \"Adults\", line = list(color = \"red\")) %>%\n      layout(xaxis = list(title = \"Year\"),\n             yaxis = list(title = \"Population Structure (%)\")) %>%\n      config(displayModeBar = FALSE)\n  })\n  \n  output$popPlot <- renderPlotly({\n    data <- population_projection()\n    plot_ly(data, x = ~Year) %>%\n      add_trace(y = ~Juveniles, type = \"scatter\", mode = \"lines+markers\",\n                name = \"Juveniles\", line = list(color = \"blue\")) %>%\n      add_trace(y = ~Adults, type = \"scatter\", mode = \"lines+markers\",\n                name = \"Adults\", line = list(color = \"red\")) %>%\n      layout(xaxis = list(title = \"Year\"),\n             yaxis = list(title = \"Population Structure (Size)\")) %>%\n      config(displayModeBar = FALSE)\n  })\n}\n\nshinyApp(ui = ui, server = server)\n","type":"text"}]
